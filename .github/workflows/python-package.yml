# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build and Test

on:
  push:
    branches: [ master, ci-fix ]
  pull_request:
    branches: [ master, ci-fix ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
        strict-xforms: [1,0]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get install -y libyaml-dev cmake
        sudo apt-get install -y libblas-dev
        sudo apt-get install -y libpapi-dev papi-tools  # Instrumentation dependencies
        sudo apt-get install -y verilator # RTL simulation dependencies
        python -m pip install --upgrade pip
        pip install flake8 pytest coverage codecov
        pip install -e ".[testing]"

    - name: Test dependencies
      run: |
        papi_avail

    - name: Sanity check
      run: |
        export NOSTATUSBAR=1
        export DACE_testing_serialization=1
        export DACE_testing_single_cache=1
        export DACE_optimizer_interface=" "
        export DACE_optimizer_automatic_strict_transformations=${{ matrix.strict-xforms }}
        cp tests/library/gemmz_test.py /tmp/gemmz_test.py
        cp tests/reloadable_libz_test.py /tmp/reloadable_libz_test.py
        cp bisect.sh /tmp/bisect.sh
        chmod a+x /tmp/bisect.sh
        git fetch --all
        
        echo "SANITY CHECK"
        git checkout 38fb56d12b59aa8dfe8bb1ff0068e29c5c75efc9
        /tmp/bisect.sh

    - name: Sanity check 2
      run: |
        export NOSTATUSBAR=1
        export DACE_testing_serialization=1
        export DACE_testing_single_cache=1
        export DACE_optimizer_interface=" "
        export DACE_optimizer_automatic_strict_transformations=${{ matrix.strict-xforms }}
        cp tests/library/gemmz_test.py /tmp/gemmz_test.py
        cp tests/reloadable_libz_test.py /tmp/reloadable_libz_test.py
        cp bisect.sh /tmp/bisect.sh
        chmod a+x /tmp/bisect.sh
        git fetch --all
        
        git checkout 6ac868e321d8344eb8bb161e4cdaf5b1ee51aedc
        pytest --cov-report=xml --cov=dace --tb=short tests/reloadable_lib_test.py
        pytest --cov-report=xml --cov=dace --tb=short tests/reloadable_lib_test.py
        pytest --cov-report=xml --cov=dace --tb=short tests/reloadable_lib_test.py
        pytest --cov-report=xml --cov=dace --tb=short tests/reloadable_lib_test.py
        pytest --cov-report=xml --cov=dace --tb=short tests/reloadable_lib_test.py
        pytest --cov-report=xml --cov=dace --tb=short tests/reloadable_lib_test.py
        pytest --cov-report=xml --cov=dace --tb=short tests/reloadable_lib_test.py
        pytest --cov-report=xml --cov=dace --tb=short tests/reloadable_lib_test.py
        pytest --cov-report=xml --cov=dace --tb=short tests/reloadable_lib_test.py
        pytest --cov-report=xml --cov=dace --tb=short tests/reloadable_lib_test.py


    - name: Bisect
      run: |
        export NOSTATUSBAR=1
        export DACE_testing_serialization=1
        export DACE_testing_single_cache=1
        export DACE_optimizer_interface=" "
        export DACE_optimizer_automatic_strict_transformations=${{ matrix.strict-xforms }}
        cp tests/library/gemmz_test.py /tmp/gemmz_test.py
        cp tests/reloadable_libz_test.py /tmp/reloadable_libz_test.py
        cp bisect.sh /tmp/bisect.sh
        chmod a+x /tmp/bisect.sh
        git fetch --all
        git checkout 6ac868e321d8344eb8bb161e4cdaf5b1ee51aedc
        git bisect start
        git bisect bad
        git bisect good 38fb56d12b59aa8dfe8bb1ff0068e29c5c75efc9
        git bisect run /tmp/bisect.sh
